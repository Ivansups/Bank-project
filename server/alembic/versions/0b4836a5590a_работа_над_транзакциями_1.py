"""Работа над транзакциями 1

Revision ID: 0b4836a5590a
Revises: 
Create Date: 2025-10-27 13:01:55.483102

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0b4836a5590a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Создаем ENUM типы перед их использованием
    credittype_enum = sa.Enum('CREDIT', 'DEBT', name='credittype')
    credittype_enum.create(op.get_bind())
    
    transactiontype_enum = sa.Enum('ADD', 'SUB', name='transactiontype')
    transactiontype_enum.create(op.get_bind())
    
    status_enum = sa.Enum('PROCESS', 'DENIED', 'ACCEPT', name='status')
    status_enum.create(op.get_bind())
    
    gender_enum = sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender')
    gender_enum.create(op.get_bind())
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_admins_user_id'), table_name='admins')
    op.drop_constraint(op.f('admins_user_id_fkey'), 'admins', type_='foreignkey')
    op.create_foreign_key(None, 'admins', 'users', ['user_id'], ['id'])
    op.drop_column('admins', 'updatedAt')
    op.drop_column('admins', 'createdAt')
    op.drop_index(op.f('idx_cards_user_id'), table_name='cards')
    op.drop_constraint(op.f('cards_user_id_fkey'), 'cards', type_='foreignkey')
    op.create_foreign_key(None, 'cards', 'users', ['user_id'], ['id'])
    
    # Теперь безопасно изменяем тип колонки
    op.alter_column('credits', 'credit_type',
               existing_type=sa.VARCHAR(length=10),
               type_=credittype_enum,
               postgresql_using='credit_type::credittype',
               existing_nullable=False)
    
    op.drop_index(op.f('idx_credits_user_id'), table_name='credits')
    op.drop_constraint(op.f('credits_user_id_fkey'), 'credits', type_='foreignkey')
    op.create_foreign_key(None, 'credits', 'users', ['user_id'], ['id'])
    
    op.add_column('transactions', sa.Column('card_id', sa.UUID(), nullable=False))
    op.add_column('transactions', sa.Column('status', status_enum, nullable=False))
    
    op.alter_column('transactions', 'amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
    
    op.alter_column('transactions', 'transaction_type',
               existing_type=sa.VARCHAR(length=10),
               type_=transactiontype_enum,
               postgresql_using='transaction_type::transactiontype',
               existing_nullable=False)
    
    op.drop_index(op.f('idx_transactions_created_at'), table_name='transactions')
    op.drop_index(op.f('idx_transactions_user_id'), table_name='transactions')
    op.drop_constraint(op.f('transactions_user_id_fkey'), 'transactions', type_='foreignkey')
    op.create_foreign_key(None, 'transactions', 'cards', ['card_id'], ['id'])
    op.create_foreign_key(None, 'transactions', 'users', ['user_id'], ['id'])
    
    op.alter_column('users', 'gender',
               existing_type=sa.VARCHAR(length=10),
               type_=gender_enum,
               postgresql_using='gender::gender',
               existing_nullable=True)
    
    op.drop_index(op.f('idx_users_email'), table_name='users')
    op.drop_index(op.f('idx_users_yandex_id'), table_name='users')
    op.drop_column('users', 'isAdmin')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('isAdmin', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.create_index(op.f('idx_users_yandex_id'), 'users', ['yandex_id'], unique=False)
    op.create_index(op.f('idx_users_email'), 'users', ['email'], unique=False)
    
    # Возвращаем gender к VARCHAR перед удалением ENUM
    op.alter_column('users', 'gender',
               existing_type=sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender'),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.create_foreign_key(op.f('transactions_user_id_fkey'), 'transactions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('idx_transactions_user_id'), 'transactions', ['user_id'], unique=False)
    op.create_index(op.f('idx_transactions_created_at'), 'transactions', ['createdAt'], unique=False)
    
    # Возвращаем transaction_type к VARCHAR
    op.alter_column('transactions', 'transaction_type',
               existing_type=sa.Enum('ADD', 'SUB', name='transactiontype'),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    
    op.alter_column('transactions', 'amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.drop_column('transactions', 'status')
    op.drop_column('transactions', 'card_id')
    
    op.drop_constraint(None, 'credits', type_='foreignkey')
    op.create_foreign_key(op.f('credits_user_id_fkey'), 'credits', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('idx_credits_user_id'), 'credits', ['user_id'], unique=False)
    
    # Возвращаем credit_type к VARCHAR
    op.alter_column('credits', 'credit_type',
               existing_type=sa.Enum('CREDIT', 'DEBT', name='credittype'),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    
    op.drop_constraint(None, 'cards', type_='foreignkey')
    op.create_foreign_key(op.f('cards_user_id_fkey'), 'cards', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('idx_cards_user_id'), 'cards', ['user_id'], unique=False)
    
    op.add_column('admins', sa.Column('createdAt', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('admins', sa.Column('updatedAt', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'admins', type_='foreignkey')
    op.create_foreign_key(op.f('admins_user_id_fkey'), 'admins', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('idx_admins_user_id'), 'admins', ['user_id'], unique=False)
    
    # Удаляем ENUM типы после того как все колонки возвращены к VARCHAR
    sa.Enum(name='gender').drop(op.get_bind())
    sa.Enum(name='status').drop(op.get_bind())
    sa.Enum(name='transactiontype').drop(op.get_bind())
    sa.Enum(name='credittype').drop(op.get_bind())
    # ### end Alembic commands ###